

Lab Exercise #10 -- SPARC Subprograms

1. Complete the following table to show the actual address for some of the
symbolic addresses defined (or used) in functions "main" and "sum_list".

Function "main" contains a series of "set" instructions to place various
addresses in the L and I registers.  Therefore, the addresses associated with
each symbolic address can be found in the first register dump.

   main        __00010b50______       sum_list    __00010b10______
   format      __00010c14______       loop        __00010b2c______
   total       __00021a98______       endloop     __00010b44______
   list        __00021a9c______       iu_window   __00011010______
   endlist     __00021abc______       memory      __00010c44______

2. Give the relative order in which the four functions ("main", "sum_list",
"iu_window", and "memory") appear in memory by listing the function names in
order, from first to last.

   sum_list    00010b10
   main        00010b50
   memory      00010c44
   iu_window   00011010

3. In the output produced by the first call to "iu_window" (printed on the
first page), locate and label each of the following items:

a. The address (in a register) from which "iu_window" was called.

   %o7: 00010ba4  (an address inside function "main")

b. The address (in a register) from which "main" was called.

   %i7: 000109a8  (an address inside function "_start")

4. In the output produced by "memory" (printed on the first page), locate and
label each of the following items:

a. The ".text" section of function "main".

     00010b50: 9d e3 bf a0 21 00 00 42 a0 14 23 50 23 00 00 43
     00010b60: a2 14 60 14 25 00 00 86 a4 14 a2 98 27 00 00 86
     00010b70: a6 14 e2 9c 29 00 00 86 a8 15 22 bc 2b 00 00 42
     00010b80: aa 15 63 10 2d 00 00 42 ac 15 a3 2c 2f 00 00 42
     00010b90: ae 15 e3 44 31 00 00 44 b0 16 20 10 33 00 00 43
     00010ba0: b2 16 60 44 40 00 01 1b 01 00 00 00 11 00 00 42
     00010bb0: 90 12 23 10 92 02 21 50 40 00 00 23 01 00 00 00
     00010bc0: 21 00 00 86 a0 14 22 9c 23 00 00 86 a2 14 62 bc
     00010bd0: a4 24 40 10 a7 3c a0 02 90 10 00 10 92 10 00 13
     00010be0: 7f ff ff cc 01 00 00 00 29 00 00 86 a8 15 22 98
     00010bf0: d0 25 00 00 11 00 00 43 90 12 20 14 92 10 00 13
     00010c00: d4 05 00 00 40 00 43 4f 01 00 00 00 81 c7 e0 08
     00010c10: 81 e8 00 00 0a 54 68 65 20 73 75 6d 20 6f 66 20
     00010c20: 74 68 65 20 25 64 20 65 6c 65 6d 65 6e 74 73 20
     00010c30: 69 6e 20 74 68 65 20 61 72 72 61 79 20 69 73 20
     00010c40: 25 64 0a 00



b. The ".text" section of function "sum_list".

     00010b10: 9d e3 bf a0 40 00 01 3f 01 00 00 00 ae 10 00 00
     00010b20: a0 10 00 18 a2 10 00 19 a4 10 00 00 80 a4 80 11
     00010b30: 16 80 00 05 01 00 00 00 a4 04 a0 01 10 bf ff fc
     00010b40: 01 00 00 00 b0 10 00 17 81 c7 e0 08 81 e8 00 00

c. The first instruction in function "memory".

     00010c40:             9d e3 be 90

d. Each branch or call instruction in function "main".

     00010b50:
     00010b60:
     00010b70:
     00010b80:
     00010b90:
     00010ba0:             40 00 01 1b
     00010bb0:                         40 00 00 23
     00010bc0:
     00010bd0:
     00010be0: 7f ff ff cc
     00010bf0:
     00010c00:             40 00 43 4f
     00010c10:
     00010c20:
     00010c30:
     00010c40:

e. Each branch or call instruction in function "sum_list".

     00010b10:             40 00 01 3f
     00010b20:
     00010b30: 16 80 00 05                         10 bf ff fc
     00010b40:

5. In the output produced by the second call to "iu_window" (printed on the
first page), locate and label each of the following items:

a. Each argument (in a register) to function "sum_list".

   %i0: 00021a9c  (the address of array "list")
   %i1: 00000008  (the number of items in array "list")

b. The address (in a register) from which "iu_window" was called.

   %o7: 00010b14  (an address inside function "sum_list")

c. The address (in a register) from which "sum_list" was called.

   %i7: 00010be0  (an address inside function "main")

